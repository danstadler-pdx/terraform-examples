
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # grafana_contact_point.team-alias[0m will be created
[0m  [32m+[0m[0m resource "grafana_contact_point" "team-alias" {
      [32m+[0m[0m disable_provenance = false
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "Team Alias"

      [32m+[0m[0m email {
          # At least one attribute in this block is (or was) sensitive,
          # so its contents will not be displayed.
        }
    }

[1m  # grafana_dashboard.alerts[0m will be created
[0m  [32m+[0m[0m resource "grafana_dashboard" "alerts" {
      [32m+[0m[0m config_json  = jsonencode(
            {
              [32m+[0m[0m annotations          = {
                  [32m+[0m[0m list = [
                      [32m+[0m[0m {
                          [32m+[0m[0m builtIn    = 1
                          [32m+[0m[0m datasource = {
                              [32m+[0m[0m type = "grafana"
                              [32m+[0m[0m uid  = "-- Grafana --"
                            }
                          [32m+[0m[0m enable     = true
                          [32m+[0m[0m hide       = true
                          [32m+[0m[0m iconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m[0m name       = "Annotations & Alerts"
                          [32m+[0m[0m type       = "dashboard"
                        },
                    ]
                }
              [32m+[0m[0m editable             = true
              [32m+[0m[0m fiscalYearStartMonth = 0
              [32m+[0m[0m graphTooltip         = 0
              [32m+[0m[0m links                = []
              [32m+[0m[0m panels               = [
                  [32m+[0m[0m {
                      [32m+[0m[0m fieldConfig   = {
                          [32m+[0m[0m defaults  = {}
                          [32m+[0m[0m overrides = []
                        }
                      [32m+[0m[0m gridPos       = {
                          [32m+[0m[0m h = 20
                          [32m+[0m[0m w = 24
                          [32m+[0m[0m x = 0
                          [32m+[0m[0m y = 0
                        }
                      [32m+[0m[0m options       = {
                          [32m+[0m[0m code    = {
                              [32m+[0m[0m language        = "plaintext"
                              [32m+[0m[0m showLineNumbers = false
                              [32m+[0m[0m showMiniMap     = false
                            }
                          [32m+[0m[0m content = <<-EOT
                                # 2. Alerts Practices
                                
                                Each team is responsible for setting up their own alert rules, notification settings, and muting rules.If you have issues, please contact the hero in the #observability channel.
                                
                                ## Required golden signals
                                Refer to the Google SRE handbook if you're unfamiliar with golden signals.
                                For applications, this will include RED metrics (rate, errors, and duration).
                                
                                For Nullam ridiculus congue dictum luctus nam justo ultricies. At litora molestie; parturient hendrerit gravida dapibus inceptos maximus. Sagittis vivamus elementum habitant; diam in dictumst phasellus eleifend. Venenatis habitant parturient mus posuere vestibulum non curae. Inceptos venenatis magna molestie et hac elit praesent natoque massa. Eu magnis rhoncus ad ultricies faucibus potenti sit. Proin suscipit maximus, imperdiet sapien suscipit nec montes. Sodales mollis phasellus lacus cubilia orci ultrices facilisi. Dictum litora per parturient elementum posuere pellentesque. Morbi feugiat massa aenean blandit commodo litora.
                                
                                
                                
                                ## Alert notifications destinations
                                
                                At our company, our primary destination will be AlertSystem. However, teams may additionally want to set up messenger or email notifications. 
                                Penatibus urna purus accumsan vulputate, cubilia aliquet iaculis. Lorem mi finibus lorem, diam mattis ornare lacus luctus. Nibh accumsan sodales hendrerit hac ligula conubia facilisis neque. Ullamcorper ligula sollicitudin et metus id ac neque porttitor. Velit feugiat at litora diam diam ante convallis. Ex ut massa bibendum ultrices nascetur diam fusce nascetur. Cubilia hendrerit scelerisque venenatis velit mattis consequat elementum orci. Integer tellus ultrices auctor et nunc mollis vivamus? Pretium fames aenean nibh; accumsan interdum dictumst.
                                
                                ## Naming conventions
                                
                                We share this Grafana stack so we need to have conventions to keep things organized for all.
                                
                                Naming convention for Alert Folders is as follows:
                                
                                Augue maximus dapibus curae massa eget malesuada magna. Metus nullam placerat consequat id porttitor enim. Penatibus elit magnis eros curae euismod. Justo eu tempus lacus pretium aenean finibus aenean. Libero imperdiet proin donec pulvinar aenean. Malesuada nascetur tincidunt dictumst est vivamus at magna vestibulum. Quam elementum facilisis; velit molestie fames vel. Rutrum non lobortis, taciti eleifend duis commodo.
                            EOT
                          [32m+[0m[0m mode    = "markdown"
                        }
                      [32m+[0m[0m pluginVersion = "11.6.0-82840"
                      [32m+[0m[0m title         = ""
                      [32m+[0m[0m type          = "text"
                    },
                ]
              [32m+[0m[0m preload              = false
              [32m+[0m[0m schemaVersion        = 41
              [32m+[0m[0m tags                 = []
              [32m+[0m[0m templating           = {
                  [32m+[0m[0m list = []
                }
              [32m+[0m[0m time                 = {
                  [32m+[0m[0m from = "now-6h"
                  [32m+[0m[0m to   = "now"
                }
              [32m+[0m[0m timepicker           = {}
              [32m+[0m[0m timezone             = "browser"
              [32m+[0m[0m title                = "2. Alerts practices"
              [32m+[0m[0m weekStart            = ""
            }
        )
      [32m+[0m[0m dashboard_id = (known after apply)
      [32m+[0m[0m folder       = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m url          = (known after apply)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # grafana_dashboard.dashboards_practices[0m will be created
[0m  [32m+[0m[0m resource "grafana_dashboard" "dashboards_practices" {
      [32m+[0m[0m config_json  = jsonencode(
            {
              [32m+[0m[0m annotations          = {
                  [32m+[0m[0m list = [
                      [32m+[0m[0m {
                          [32m+[0m[0m builtIn    = 1
                          [32m+[0m[0m datasource = {
                              [32m+[0m[0m type = "grafana"
                              [32m+[0m[0m uid  = "-- Grafana --"
                            }
                          [32m+[0m[0m enable     = true
                          [32m+[0m[0m hide       = true
                          [32m+[0m[0m iconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m[0m name       = "Annotations & Alerts"
                          [32m+[0m[0m type       = "dashboard"
                        },
                    ]
                }
              [32m+[0m[0m editable             = true
              [32m+[0m[0m fiscalYearStartMonth = 0
              [32m+[0m[0m graphTooltip         = 0
              [32m+[0m[0m links                = []
              [32m+[0m[0m panels               = [
                  [32m+[0m[0m {
                      [32m+[0m[0m fieldConfig   = {
                          [32m+[0m[0m defaults  = {}
                          [32m+[0m[0m overrides = []
                        }
                      [32m+[0m[0m gridPos       = {
                          [32m+[0m[0m h = 20
                          [32m+[0m[0m w = 24
                          [32m+[0m[0m x = 0
                          [32m+[0m[0m y = 0
                        }
                      [32m+[0m[0m options       = {
                          [32m+[0m[0m code    = {
                              [32m+[0m[0m language        = "plaintext"
                              [32m+[0m[0m showLineNumbers = false
                              [32m+[0m[0m showMiniMap     = false
                            }
                          [32m+[0m[0m content = <<-EOT
                                # 3. Dashboards Practices
                                
                                Each team is responsible for setting up their own dashboards.If you have issues, please contact the hero in the #observability channel.
                                
                                ## Naming conventions
                                
                                We share this Grafana stack so we need to have conventions to keep things organized for all.
                                
                                Naming convention for Dashboards Folders is as follows:
                                
                                Augue maximus dapibus curae massa eget malesuada magna. Metus nullam placerat consequat id porttitor enim. Penatibus elit magnis eros curae euismod. Justo eu tempus lacus pretium aenean finibus aenean. Libero imperdiet proin donec pulvinar aenean. Malesuada nascetur tincidunt dictumst est vivamus at magna vestibulum. Quam elementum facilisis; velit molestie fames vel. Rutrum non lobortis, taciti eleifend duis commodo.
                            EOT
                          [32m+[0m[0m mode    = "markdown"
                        }
                      [32m+[0m[0m pluginVersion = "11.6.0-82840"
                      [32m+[0m[0m title         = ""
                      [32m+[0m[0m type          = "text"
                    },
                ]
              [32m+[0m[0m preload              = false
              [32m+[0m[0m schemaVersion        = 41
              [32m+[0m[0m tags                 = []
              [32m+[0m[0m templating           = {
                  [32m+[0m[0m list = []
                }
              [32m+[0m[0m time                 = {
                  [32m+[0m[0m from = "now-6h"
                  [32m+[0m[0m to   = "now"
                }
              [32m+[0m[0m timepicker           = {}
              [32m+[0m[0m timezone             = "browser"
              [32m+[0m[0m title                = "3. Dashboards Practices"
              [32m+[0m[0m weekStart            = ""
            }
        )
      [32m+[0m[0m dashboard_id = (known after apply)
      [32m+[0m[0m folder       = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m url          = (known after apply)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # grafana_dashboard.getting_started[0m will be created
[0m  [32m+[0m[0m resource "grafana_dashboard" "getting_started" {
      [32m+[0m[0m config_json  = jsonencode(
            {
              [32m+[0m[0m annotations          = {
                  [32m+[0m[0m list = [
                      [32m+[0m[0m {
                          [32m+[0m[0m builtIn    = 1
                          [32m+[0m[0m datasource = {
                              [32m+[0m[0m type = "grafana"
                              [32m+[0m[0m uid  = "-- Grafana --"
                            }
                          [32m+[0m[0m enable     = true
                          [32m+[0m[0m hide       = true
                          [32m+[0m[0m iconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m[0m name       = "Annotations & Alerts"
                          [32m+[0m[0m type       = "dashboard"
                        },
                    ]
                }
              [32m+[0m[0m editable             = true
              [32m+[0m[0m fiscalYearStartMonth = 0
              [32m+[0m[0m graphTooltip         = 0
              [32m+[0m[0m links                = []
              [32m+[0m[0m panels               = [
                  [32m+[0m[0m {
                      [32m+[0m[0m fieldConfig   = {
                          [32m+[0m[0m defaults  = {}
                          [32m+[0m[0m overrides = []
                        }
                      [32m+[0m[0m gridPos       = {
                          [32m+[0m[0m h = 22
                          [32m+[0m[0m w = 24
                          [32m+[0m[0m x = 0
                          [32m+[0m[0m y = 0
                        }
                      [32m+[0m[0m options       = {
                          [32m+[0m[0m code    = {
                              [32m+[0m[0m language        = "plaintext"
                              [32m+[0m[0m showLineNumbers = false
                              [32m+[0m[0m showMiniMap     = false
                            }
                          [32m+[0m[0m content = <<-EOT
                                # 1. Getting Started with Grafana
                                - Provisioning new users 
                                - Your internal observability team: #observability
                                - Grafana Learning resources: https://grafana.com/tutorials/
                                - Grafana Technical Support for troubleshooting Grafana issues: https://grafana.com/help/
                                 
                                
                                ## Team Ownership
                                Teams are responsible for the following areas.
                                
                                ### Instrumentation
                                - Instrumentation should be completed. If additional projects need to be added to Grafana, contact #observability team prior to adding any instrumentation.
                                
                                
                                The following topics are added as additional resources in this folder:
                                
                                ### 2. Alerts
                                	- required golden signals
                                	- alert notifications destinations
                                	- naming conventions
                                
                                ### 3. Dashboards
                                	- naming conventions
                                	- restoring a previous version 
                                
                                ### 4. Terraform
                                	- alerts, examples
                                	- other terraform resources: synthetics, dashboards
                                
                                ### 5. API keys, service accounts
                                	- our processes for safekeeping and rotating sensitive tokens
                            EOT
                          [32m+[0m[0m mode    = "markdown"
                        }
                      [32m+[0m[0m pluginVersion = "11.6.0-82840"
                      [32m+[0m[0m title         = ""
                      [32m+[0m[0m type          = "text"
                    },
                ]
              [32m+[0m[0m preload              = false
              [32m+[0m[0m schemaVersion        = 41
              [32m+[0m[0m tags                 = []
              [32m+[0m[0m templating           = {
                  [32m+[0m[0m list = []
                }
              [32m+[0m[0m time                 = {
                  [32m+[0m[0m from = "now-6h"
                  [32m+[0m[0m to   = "now"
                }
              [32m+[0m[0m timepicker           = {}
              [32m+[0m[0m timezone             = "browser"
              [32m+[0m[0m title                = "1. Start here - Resources for Grafana & Overview of ownership"
              [32m+[0m[0m weekStart            = ""
            }
        )
      [32m+[0m[0m dashboard_id = (known after apply)
      [32m+[0m[0m folder       = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m url          = (known after apply)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # grafana_dashboard.keys[0m will be created
[0m  [32m+[0m[0m resource "grafana_dashboard" "keys" {
      [32m+[0m[0m config_json  = jsonencode(
            {
              [32m+[0m[0m annotations          = {
                  [32m+[0m[0m list = [
                      [32m+[0m[0m {
                          [32m+[0m[0m builtIn    = 1
                          [32m+[0m[0m datasource = {
                              [32m+[0m[0m type = "grafana"
                              [32m+[0m[0m uid  = "-- Grafana --"
                            }
                          [32m+[0m[0m enable     = true
                          [32m+[0m[0m hide       = true
                          [32m+[0m[0m iconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m[0m name       = "Annotations & Alerts"
                          [32m+[0m[0m type       = "dashboard"
                        },
                    ]
                }
              [32m+[0m[0m editable             = true
              [32m+[0m[0m fiscalYearStartMonth = 0
              [32m+[0m[0m graphTooltip         = 0
              [32m+[0m[0m links                = []
              [32m+[0m[0m panels               = [
                  [32m+[0m[0m {
                      [32m+[0m[0m fieldConfig   = {
                          [32m+[0m[0m defaults  = {}
                          [32m+[0m[0m overrides = []
                        }
                      [32m+[0m[0m gridPos       = {
                          [32m+[0m[0m h = 20
                          [32m+[0m[0m w = 24
                          [32m+[0m[0m x = 0
                          [32m+[0m[0m y = 0
                        }
                      [32m+[0m[0m options       = {
                          [32m+[0m[0m code    = {
                              [32m+[0m[0m language        = "plaintext"
                              [32m+[0m[0m showLineNumbers = false
                              [32m+[0m[0m showMiniMap     = false
                            }
                          [32m+[0m[0m content = <<-EOT
                                # 5. Auth access keys and service account tokens
                                
                                We use Vault and you can access our internal processes [here]().
                            EOT
                          [32m+[0m[0m mode    = "markdown"
                        }
                      [32m+[0m[0m pluginVersion = "11.6.0-82840"
                      [32m+[0m[0m title         = ""
                      [32m+[0m[0m type          = "text"
                    },
                ]
              [32m+[0m[0m preload              = false
              [32m+[0m[0m schemaVersion        = 41
              [32m+[0m[0m tags                 = []
              [32m+[0m[0m templating           = {
                  [32m+[0m[0m list = []
                }
              [32m+[0m[0m time                 = {
                  [32m+[0m[0m from = "now-6h"
                  [32m+[0m[0m to   = "now"
                }
              [32m+[0m[0m timepicker           = {}
              [32m+[0m[0m timezone             = "browser"
              [32m+[0m[0m title                = "5. Access Token Security"
              [32m+[0m[0m weekStart            = ""
            }
        )
      [32m+[0m[0m dashboard_id = (known after apply)
      [32m+[0m[0m folder       = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m url          = (known after apply)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # grafana_dashboard.terraforming[0m will be created
[0m  [32m+[0m[0m resource "grafana_dashboard" "terraforming" {
      [32m+[0m[0m config_json  = jsonencode(
            {
              [32m+[0m[0m annotations          = {
                  [32m+[0m[0m list = [
                      [32m+[0m[0m {
                          [32m+[0m[0m builtIn    = 1
                          [32m+[0m[0m datasource = {
                              [32m+[0m[0m type = "grafana"
                              [32m+[0m[0m uid  = "-- Grafana --"
                            }
                          [32m+[0m[0m enable     = true
                          [32m+[0m[0m hide       = true
                          [32m+[0m[0m iconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m[0m name       = "Annotations & Alerts"
                          [32m+[0m[0m type       = "dashboard"
                        },
                    ]
                }
              [32m+[0m[0m editable             = true
              [32m+[0m[0m fiscalYearStartMonth = 0
              [32m+[0m[0m graphTooltip         = 0
              [32m+[0m[0m links                = []
              [32m+[0m[0m panels               = [
                  [32m+[0m[0m {
                      [32m+[0m[0m fieldConfig   = {
                          [32m+[0m[0m defaults  = {}
                          [32m+[0m[0m overrides = []
                        }
                      [32m+[0m[0m gridPos       = {
                          [32m+[0m[0m h = 20
                          [32m+[0m[0m w = 24
                          [32m+[0m[0m x = 0
                          [32m+[0m[0m y = 0
                        }
                      [32m+[0m[0m options       = {
                          [32m+[0m[0m code    = {
                              [32m+[0m[0m language        = "plaintext"
                              [32m+[0m[0m showLineNumbers = false
                              [32m+[0m[0m showMiniMap     = false
                            }
                          [32m+[0m[0m content = <<-EOT
                                # 4. Terraforming Practices
                                
                                It is recommended to use Terraform to create alerts.
                                Teams can optionally use terraform for other Grafana resources.
                                
                                If you have issues, please contact the hero in the #observability channel.
                                
                                ## Alert Examples 
                                
                                Each team will know which alerts are applicable to their teams and alerting thresholds that are appropriate.
                                
                                Teams can reference the following other teams' github repos for examples of how to write great tf alerts:
                                * [IAM squad alert examples](https://www.github.com)
                                * [DB squad alert examples](https://www.github.com)
                                
                                Note: 
                                Your team is unique and may need mattis leo egestas vitae pretium? Elit mi odio eros lacus tortor varius natoque lorem. Torquent facilisi eget primis nisi pretium placerat per at. Dapibus semper luctus senectus maecenas urna lectus hendrerit aliquam. Elit diam libero penatibus eros nunc natoque turpis parturient felis. Lacinia libero nisi pulvinar tristique adipiscing integer augue. Faucibus vitae nostra habitant at nullam sapien. At urna urna magnis convallis dapibus conubia metus condimentum. Ac ut sapien ex sagittis odio lectus facilisi ut.
                                
                                Terraform internal practices:
                                Refer to our [internal wiki]() on our tf practices including safeguarding state, using tf tooling, etc.
                            EOT
                          [32m+[0m[0m mode    = "markdown"
                        }
                      [32m+[0m[0m pluginVersion = "11.6.0-82840"
                      [32m+[0m[0m title         = ""
                      [32m+[0m[0m type          = "text"
                    },
                ]
              [32m+[0m[0m preload              = false
              [32m+[0m[0m schemaVersion        = 41
              [32m+[0m[0m tags                 = []
              [32m+[0m[0m templating           = {
                  [32m+[0m[0m list = []
                }
              [32m+[0m[0m time                 = {
                  [32m+[0m[0m from = "now-6h"
                  [32m+[0m[0m to   = "now"
                }
              [32m+[0m[0m timepicker           = {}
              [32m+[0m[0m timezone             = "browser"
              [32m+[0m[0m title                = "4. Terraforming Grafana"
              [32m+[0m[0m weekStart            = ""
            }
        )
      [32m+[0m[0m dashboard_id = (known after apply)
      [32m+[0m[0m folder       = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m url          = (known after apply)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # grafana_data_source.my_data_source[0m will be created
[0m  [32m+[0m[0m resource "grafana_data_source" "my_data_source" {
      [32m+[0m[0m access_mode        = "proxy"
      [32m+[0m[0m basic_auth_enabled = false
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m is_default         = false
      [32m+[0m[0m name               = "TestData"
      [32m+[0m[0m type               = "testdata"
      [32m+[0m[0m uid                = (known after apply)
    }

[1m  # grafana_folder.best_practices_folder[0m will be created
[0m  [32m+[0m[0m resource "grafana_folder" "best_practices_folder" {
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m prevent_destroy_if_not_empty = false
      [32m+[0m[0m title                        = "Grafana - Ways of Working & best practices"
      [32m+[0m[0m uid                          = (known after apply)
      [32m+[0m[0m url                          = (known after apply)
    }

[1m  # grafana_folder.team_A_folder[0m will be created
[0m  [32m+[0m[0m resource "grafana_folder" "team_A_folder" {
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m prevent_destroy_if_not_empty = false
      [32m+[0m[0m title                        = "Team A Folder"
      [32m+[0m[0m uid                          = (known after apply)
      [32m+[0m[0m url                          = (known after apply)
    }

[1m  # grafana_message_template.team_message_template_name[0m will be created
[0m  [32m+[0m[0m resource "grafana_message_template" "team_message_template_name" {
      [32m+[0m[0m disable_provenance = false
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "custom_emails"
      [32m+[0m[0m template           = <<-EOT
            {{ define "custom_email.message" }}
             Lorem ipsum - Custom alert!
             {{ end }}
        EOT
    }

[1m  # grafana_rule_group.random-walk-alerts-group[0m will be created
[0m  [32m+[0m[0m resource "grafana_rule_group" "random-walk-alerts-group" {
      [32m+[0m[0m disable_provenance = false
      [32m+[0m[0m folder_uid         = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m interval_seconds   = 60
      [32m+[0m[0m name               = "My Alert Rules"

      [32m+[0m[0m rule {
          [32m+[0m[0m condition = "C"
          [32m+[0m[0m is_paused = false
          [32m+[0m[0m name      = "My Random Walk Alert"
          [32m+[0m[0m uid       = (known after apply)

          [32m+[0m[0m data {
              [32m+[0m[0m datasource_uid = (known after apply)
              [32m+[0m[0m model          = jsonencode(
                    {
                      [32m+[0m[0m refId = "A"
                    }
                )
              [32m+[0m[0m ref_id         = "A"

              [32m+[0m[0m relative_time_range {
                  [32m+[0m[0m from = 600
                  [32m+[0m[0m to   = 0
                }
            }
          [32m+[0m[0m data {
              [32m+[0m[0m datasource_uid = "__expr__"
              [32m+[0m[0m model          = jsonencode(
                    {
                      [32m+[0m[0m conditions = [
                          [32m+[0m[0m {
                              [32m+[0m[0m evaluator = {
                                  [32m+[0m[0m params = [
                                      [32m+[0m[0m 0,
                                      [32m+[0m[0m 0,
                                    ]
                                  [32m+[0m[0m type   = "gt"
                                }
                              [32m+[0m[0m operator  = {
                                  [32m+[0m[0m type = "and"
                                }
                              [32m+[0m[0m query     = {
                                  [32m+[0m[0m params = [
                                      [32m+[0m[0m "A",
                                    ]
                                }
                              [32m+[0m[0m reducer   = {
                                  [32m+[0m[0m params = []
                                  [32m+[0m[0m type   = "last"
                                }
                              [32m+[0m[0m type      = "avg"
                            },
                        ]
                      [32m+[0m[0m datasource = {
                          [32m+[0m[0m name = "Expression"
                          [32m+[0m[0m type = "__expr__"
                          [32m+[0m[0m uid  = "__expr__"
                        }
                      [32m+[0m[0m expression = "A"
                      [32m+[0m[0m hide       = false
                      [32m+[0m[0m reducer    = "last"
                      [32m+[0m[0m refId      = "B"
                      [32m+[0m[0m type       = "reduce"
                    }
                )
              [32m+[0m[0m ref_id         = "B"

              [32m+[0m[0m relative_time_range {
                  [32m+[0m[0m from = 0
                  [32m+[0m[0m to   = 0
                }
            }
          [32m+[0m[0m data {
              [32m+[0m[0m datasource_uid = "__expr__"
              [32m+[0m[0m model          = jsonencode(
                    {
                      [32m+[0m[0m expression = "$B > 70"
                      [32m+[0m[0m refId      = "C"
                      [32m+[0m[0m type       = "math"
                    }
                )
              [32m+[0m[0m ref_id         = "C"

              [32m+[0m[0m relative_time_range {
                  [32m+[0m[0m from = 0
                  [32m+[0m[0m to   = 0
                }
            }
        }
    }

[1mPlan:[0m 11 to add, 0 to change, 0 to destroy.
[0m[0m[1mgrafana_message_template.team_message_template_name: Creating...[0m[0m
[0m[1mgrafana_data_source.my_data_source: Creating...[0m[0m
[0m[1mgrafana_folder.team_A_folder: Creating...[0m[0m
[0m[1mgrafana_folder.best_practices_folder: Creating...[0m[0m
[0m[1mgrafana_contact_point.team-alias: Creating...[0m[0m
[0m[1mgrafana_message_template.team_message_template_name: Creation complete after 1s [id=0:custom_emails][0m
[0m[1mgrafana_folder.best_practices_folder: Creation complete after 1s [id=0:aedvjoyn35vy8d][0m
[0m[1mgrafana_dashboard.keys: Creating...[0m[0m
[0m[1mgrafana_dashboard.terraforming: Creating...[0m[0m
[0m[1mgrafana_dashboard.dashboards_practices: Creating...[0m[0m
[0m[1mgrafana_dashboard.getting_started: Creating...[0m[0m
[0m[1mgrafana_dashboard.alerts: Creating...[0m[0m
[0m[1mgrafana_data_source.my_data_source: Creation complete after 1s [id=1:dedvjoyooljwge][0m
[0m[1mgrafana_folder.team_A_folder: Creation complete after 1s [id=0:bedvjoyn35vy9d][0m
[0m[1mgrafana_rule_group.random-walk-alerts-group: Creating...[0m[0m
[0m[1mgrafana_contact_point.team-alias: Creation complete after 1s [id=0:Team Alias][0m
[0m[1mgrafana_dashboard.keys: Creation complete after 0s [id=0:dedvjozc4n8qpc][0m
[0m[1mgrafana_dashboard.alerts: Creation complete after 0s [id=0:aedvjozc4n8qod][0m
[0m[1mgrafana_dashboard.getting_started: Creation complete after 0s [id=0:eedvjozcc4xs0a][0m
[0m[1mgrafana_dashboard.dashboards_practices: Creation complete after 0s [id=0:eedvjozd63pxce][0m
[0m[1mgrafana_dashboard.terraforming: Creation complete after 0s [id=0:eedvjozcr4buod][0m
[0m[1mgrafana_rule_group.random-walk-alerts-group: Creation complete after 0s [id=0:bedvjoyn35vy9d:My Alert Rules][0m
[0m[1m[32m
Apply complete! Resources: 11 added, 0 changed, 0 destroyed.
[0m